# Generated by roxygen2: do not edit by hand

export(Compute_L1_dist)
export(Compute_coclust_error)
export(ConditionalSampler)
export(EigenTest)
export(Expected_posterior)
export(Expected_prior)
export(GDFMM_marginal_sampler)
export(GDFMM_sampler)
export(TestGSL)
export(Test_Prior)
export(Test_Rcpp)
export(Test_data)
export(Test_prod_sum)
export(arrange_partition)
export(calcola_generalized_factorial_ricor_log_matrice_old)
export(calcola_generalized_factorial_ricor_log_old)
export(calcola_stirling)
export(calcola_stirling_old)
export(calcola_stirling_ricor)
export(calcola_stirling_ricor_abs_old)
export(calcola_stirling_ricor_centr)
export(calcola_stirling_ricor_log)
export(calcola_stirling_ricor_log_centrali)
export(calcola_stirling_ricor_log_old)
export(calcola_stirling_ricor_old)
export(compute_LMPL)
export(compute_Pochhammer)
export(compute_logC)
export(compute_log_Pochhammer)
export(data_mat2list)
export(dmix)
export(dnct)
export(dnorm_est)
export(empirical_bayes_normalinvgamma)
export(falling_factorial)
export(genera_mix_gas)
export(generate_data)
export(generate_data_prob)
export(input_handle)
export(lastirling1)
export(lastirlings1)
export(lgfactorial)
export(lgfactorial_ns)
export(lgfactorials)
export(log_raising_factorial)
export(log_raising_factorial_poch)
export(log_stable_sum)
export(my_falling_factorial)
export(my_falling_factorial_old)
export(my_logC)
export(my_logC2)
export(my_logC2_central)
export(my_log_falling_factorial)
export(my_log_falling_factorial_old)
export(p_distinct_posterior)
export(p_distinct_prior)
export(p_shared_posterior)
export(p_shared_prior)
export(point_density)
export(pred_uninorm)
export(predictive)
export(predictive_all_groups)
export(predictive_marginal)
export(predictive_marginal_all_groups)
export(predictive_new_group)
export(predictive_players)
export(predictive_players_fix_partition)
export(raising_factorial)
export(raising_factorial_poch)
export(rmix)
export(set_options)
export(set_options_marginal)
export(simulate_data)
export(simulate_data_OLD_POLIMI)
export(sum_check)
export(try_rcpp)
importFrom(Rcpp,sourceCpp)
importFrom(RcppParallel,RcppParallelLibs)
useDynLib(GDFMM, .registration = TRUE)
